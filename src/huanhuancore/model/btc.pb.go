// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/huanhuancore/model/btc.proto

package token

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BTC struct {
	Txid                 string   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Locktime             int64    `protobuf:"varint,2,opt,name=locktime,proto3" json:"locktime,omitempty"`
	Blockhash            string   `protobuf:"bytes,3,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
	Confirmations        int64    `protobuf:"varint,4,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	Vout                 []*Vout  `protobuf:"bytes,5,rep,name=vout,proto3" json:"vout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BTC) Reset()         { *m = BTC{} }
func (m *BTC) String() string { return proto.CompactTextString(m) }
func (*BTC) ProtoMessage()    {}
func (*BTC) Descriptor() ([]byte, []int) {
	return fileDescriptor_f91c898ab8de7d70, []int{0}
}

func (m *BTC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BTC.Unmarshal(m, b)
}
func (m *BTC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BTC.Marshal(b, m, deterministic)
}
func (m *BTC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BTC.Merge(m, src)
}
func (m *BTC) XXX_Size() int {
	return xxx_messageInfo_BTC.Size(m)
}
func (m *BTC) XXX_DiscardUnknown() {
	xxx_messageInfo_BTC.DiscardUnknown(m)
}

var xxx_messageInfo_BTC proto.InternalMessageInfo

func (m *BTC) GetTxid() string {
	if m != nil {
		return m.Txid
	}
	return ""
}

func (m *BTC) GetLocktime() int64 {
	if m != nil {
		return m.Locktime
	}
	return 0
}

func (m *BTC) GetBlockhash() string {
	if m != nil {
		return m.Blockhash
	}
	return ""
}

func (m *BTC) GetConfirmations() int64 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *BTC) GetVout() []*Vout {
	if m != nil {
		return m.Vout
	}
	return nil
}

type Vout struct {
	Value                float64       `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	ScriptPubKey         *ScriptPubKey `protobuf:"bytes,2,opt,name=scriptPubKey,proto3" json:"scriptPubKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Vout) Reset()         { *m = Vout{} }
func (m *Vout) String() string { return proto.CompactTextString(m) }
func (*Vout) ProtoMessage()    {}
func (*Vout) Descriptor() ([]byte, []int) {
	return fileDescriptor_f91c898ab8de7d70, []int{1}
}

func (m *Vout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vout.Unmarshal(m, b)
}
func (m *Vout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vout.Marshal(b, m, deterministic)
}
func (m *Vout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vout.Merge(m, src)
}
func (m *Vout) XXX_Size() int {
	return xxx_messageInfo_Vout.Size(m)
}
func (m *Vout) XXX_DiscardUnknown() {
	xxx_messageInfo_Vout.DiscardUnknown(m)
}

var xxx_messageInfo_Vout proto.InternalMessageInfo

func (m *Vout) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Vout) GetScriptPubKey() *ScriptPubKey {
	if m != nil {
		return m.ScriptPubKey
	}
	return nil
}

type ScriptPubKey struct {
	Addresses            []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScriptPubKey) Reset()         { *m = ScriptPubKey{} }
func (m *ScriptPubKey) String() string { return proto.CompactTextString(m) }
func (*ScriptPubKey) ProtoMessage()    {}
func (*ScriptPubKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_f91c898ab8de7d70, []int{2}
}

func (m *ScriptPubKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScriptPubKey.Unmarshal(m, b)
}
func (m *ScriptPubKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScriptPubKey.Marshal(b, m, deterministic)
}
func (m *ScriptPubKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScriptPubKey.Merge(m, src)
}
func (m *ScriptPubKey) XXX_Size() int {
	return xxx_messageInfo_ScriptPubKey.Size(m)
}
func (m *ScriptPubKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ScriptPubKey.DiscardUnknown(m)
}

var xxx_messageInfo_ScriptPubKey proto.InternalMessageInfo

func (m *ScriptPubKey) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func init() {
	proto.RegisterType((*BTC)(nil), "model.token.BTC")
	proto.RegisterType((*Vout)(nil), "model.token.Vout")
	proto.RegisterType((*ScriptPubKey)(nil), "model.token.ScriptPubKey")
}

func init() { proto.RegisterFile("src/huanhuancore/model/btc.proto", fileDescriptor_f91c898ab8de7d70) }

var fileDescriptor_f91c898ab8de7d70 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0x89, 0xed, 0xa8, 0x73, 0x3b, 0x2e, 0x0c, 0x2e, 0xa2, 0xb8, 0x28, 0x45, 0xa1, 0x0b,
	0x69, 0x61, 0x5c, 0xbb, 0x19, 0x97, 0x6e, 0x24, 0x8a, 0x0b, 0x5d, 0xa5, 0x69, 0xa4, 0x61, 0xda,
	0xde, 0x21, 0x3f, 0x83, 0xbe, 0x8d, 0x8f, 0x2a, 0x89, 0x30, 0xb6, 0x8b, 0x40, 0xce, 0x77, 0x7f,
	0x38, 0xe7, 0x42, 0x6e, 0x8d, 0xac, 0x3b, 0x2f, 0xc6, 0xf0, 0x24, 0x1a, 0x55, 0x0f, 0xd8, 0xaa,
	0xbe, 0x6e, 0x9c, 0xac, 0x76, 0x06, 0x1d, 0xd2, 0x2c, 0x82, 0xca, 0xe1, 0x56, 0x8d, 0xc5, 0x0f,
	0x81, 0x64, 0xf3, 0xfa, 0x48, 0x29, 0xa4, 0xee, 0x4b, 0xb7, 0x8c, 0xe4, 0xa4, 0x5c, 0xf2, 0xf8,
	0xa7, 0x57, 0x70, 0xda, 0xa3, 0xdc, 0x3a, 0x3d, 0x28, 0x76, 0x94, 0x93, 0x32, 0xe1, 0x07, 0x4d,
	0xaf, 0x61, 0xd9, 0x04, 0xd1, 0x09, 0xdb, 0xb1, 0x24, 0x0e, 0xfd, 0x03, 0x7a, 0x03, 0x67, 0x12,
	0xc7, 0x4f, 0x6d, 0x06, 0xe1, 0x34, 0x8e, 0x96, 0xa5, 0x71, 0x7c, 0x0e, 0xe9, 0x2d, 0xa4, 0x7b,
	0xf4, 0x8e, 0x2d, 0xf2, 0xa4, 0xcc, 0xd6, 0xe7, 0xd5, 0xc4, 0x57, 0xf5, 0x86, 0xde, 0xf1, 0x58,
	0x2e, 0x3e, 0x20, 0x0d, 0x8a, 0x5e, 0xc0, 0x62, 0x2f, 0x7a, 0xaf, 0xa2, 0x47, 0xc2, 0xff, 0x04,
	0x7d, 0x80, 0x95, 0x95, 0x46, 0xef, 0xdc, 0xb3, 0x6f, 0x9e, 0xd4, 0x77, 0x34, 0x9a, 0xad, 0x2f,
	0x67, 0xcb, 0x5e, 0x26, 0x0d, 0x7c, 0xd6, 0x5e, 0xdc, 0xc1, 0x6a, 0x5a, 0x0d, 0xb9, 0x44, 0xdb,
	0x1a, 0x65, 0xad, 0xb2, 0x8c, 0xe4, 0x49, 0xc8, 0x75, 0x00, 0x9b, 0x93, 0xf7, 0x45, 0xdc, 0xd8,
	0x1c, 0xc7, 0x53, 0xde, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xdc, 0xf4, 0x1e, 0x40, 0x6e, 0x01,
	0x00, 0x00,
}
