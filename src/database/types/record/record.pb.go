// Code generated by protoc-gen-go. DO NOT EDIT.
// source: record.proto

package record

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DBReply struct {
	Reply                *Record  `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DBReply) Reset()         { *m = DBReply{} }
func (m *DBReply) String() string { return proto.CompactTextString(m) }
func (*DBReply) ProtoMessage()    {}
func (*DBReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{0}
}

func (m *DBReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBReply.Unmarshal(m, b)
}
func (m *DBReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBReply.Marshal(b, m, deterministic)
}
func (m *DBReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBReply.Merge(m, src)
}
func (m *DBReply) XXX_Size() int {
	return xxx_messageInfo_DBReply.Size(m)
}
func (m *DBReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DBReply.DiscardUnknown(m)
}

var xxx_messageInfo_DBReply proto.InternalMessageInfo

func (m *DBReply) GetReply() *Record {
	if m != nil {
		return m.Reply
	}
	return nil
}

type DBReplies struct {
	Replies              []*Record `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DBReplies) Reset()         { *m = DBReplies{} }
func (m *DBReplies) String() string { return proto.CompactTextString(m) }
func (*DBReplies) ProtoMessage()    {}
func (*DBReplies) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{1}
}

func (m *DBReplies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBReplies.Unmarshal(m, b)
}
func (m *DBReplies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBReplies.Marshal(b, m, deterministic)
}
func (m *DBReplies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBReplies.Merge(m, src)
}
func (m *DBReplies) XXX_Size() int {
	return xxx_messageInfo_DBReplies.Size(m)
}
func (m *DBReplies) XXX_DiscardUnknown() {
	xxx_messageInfo_DBReplies.DiscardUnknown(m)
}

var xxx_messageInfo_DBReplies proto.InternalMessageInfo

func (m *DBReplies) GetReplies() []*Record {
	if m != nil {
		return m.Replies
	}
	return nil
}

type DBRequest struct {
	Txhash               string   `protobuf:"bytes,1,opt,name=txhash,proto3" json:"txhash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DBRequest) Reset()         { *m = DBRequest{} }
func (m *DBRequest) String() string { return proto.CompactTextString(m) }
func (*DBRequest) ProtoMessage()    {}
func (*DBRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{2}
}

func (m *DBRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBRequest.Unmarshal(m, b)
}
func (m *DBRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBRequest.Marshal(b, m, deterministic)
}
func (m *DBRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBRequest.Merge(m, src)
}
func (m *DBRequest) XXX_Size() int {
	return xxx_messageInfo_DBRequest.Size(m)
}
func (m *DBRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DBRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DBRequest proto.InternalMessageInfo

func (m *DBRequest) GetTxhash() string {
	if m != nil {
		return m.Txhash
	}
	return ""
}

type DBRequests struct {
	Txhashes             []string `protobuf:"bytes,1,rep,name=txhashes,proto3" json:"txhashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DBRequests) Reset()         { *m = DBRequests{} }
func (m *DBRequests) String() string { return proto.CompactTextString(m) }
func (*DBRequests) ProtoMessage()    {}
func (*DBRequests) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{3}
}

func (m *DBRequests) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBRequests.Unmarshal(m, b)
}
func (m *DBRequests) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBRequests.Marshal(b, m, deterministic)
}
func (m *DBRequests) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBRequests.Merge(m, src)
}
func (m *DBRequests) XXX_Size() int {
	return xxx_messageInfo_DBRequests.Size(m)
}
func (m *DBRequests) XXX_DiscardUnknown() {
	xxx_messageInfo_DBRequests.DiscardUnknown(m)
}

var xxx_messageInfo_DBRequests proto.InternalMessageInfo

func (m *DBRequests) GetTxhashes() []string {
	if m != nil {
		return m.Txhashes
	}
	return nil
}

type Record struct {
	Txhash               string       `protobuf:"bytes,1,opt,name=txhash,proto3" json:"txhash,omitempty"`
	FromToken            *TokenDetail `protobuf:"bytes,2,opt,name=fromToken,proto3" json:"fromToken,omitempty"`
	ToToken              *TokenDetail `protobuf:"bytes,3,opt,name=toToken,proto3" json:"toToken,omitempty"`
	Exrate               float64      `protobuf:"fixed64,4,opt,name=exrate,proto3" json:"exrate,omitempty"`
	StatusCode           int32        `protobuf:"varint,5,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	StatusTime           *StatusTime  `protobuf:"bytes,6,opt,name=statusTime,proto3" json:"statusTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{4}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetTxhash() string {
	if m != nil {
		return m.Txhash
	}
	return ""
}

func (m *Record) GetFromToken() *TokenDetail {
	if m != nil {
		return m.FromToken
	}
	return nil
}

func (m *Record) GetToToken() *TokenDetail {
	if m != nil {
		return m.ToToken
	}
	return nil
}

func (m *Record) GetExrate() float64 {
	if m != nil {
		return m.Exrate
	}
	return 0
}

func (m *Record) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Record) GetStatusTime() *StatusTime {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type TokenDetail struct {
	Txhash               string   `protobuf:"bytes,1,opt,name=txhash,proto3" json:"txhash,omitempty"`
	TokenType            string   `protobuf:"bytes,2,opt,name=tokenType,proto3" json:"tokenType,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	TokenValue           string   `protobuf:"bytes,4,opt,name=tokenValue,proto3" json:"tokenValue,omitempty"`
	TokenDecimal         int32    `protobuf:"varint,5,opt,name=tokenDecimal,proto3" json:"tokenDecimal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenDetail) Reset()         { *m = TokenDetail{} }
func (m *TokenDetail) String() string { return proto.CompactTextString(m) }
func (*TokenDetail) ProtoMessage()    {}
func (*TokenDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{5}
}

func (m *TokenDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenDetail.Unmarshal(m, b)
}
func (m *TokenDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenDetail.Marshal(b, m, deterministic)
}
func (m *TokenDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenDetail.Merge(m, src)
}
func (m *TokenDetail) XXX_Size() int {
	return xxx_messageInfo_TokenDetail.Size(m)
}
func (m *TokenDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenDetail.DiscardUnknown(m)
}

var xxx_messageInfo_TokenDetail proto.InternalMessageInfo

func (m *TokenDetail) GetTxhash() string {
	if m != nil {
		return m.Txhash
	}
	return ""
}

func (m *TokenDetail) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *TokenDetail) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TokenDetail) GetTokenValue() string {
	if m != nil {
		return m.TokenValue
	}
	return ""
}

func (m *TokenDetail) GetTokenDecimal() int32 {
	if m != nil {
		return m.TokenDecimal
	}
	return 0
}

type StatusTime struct {
	PendingAt            int64    `protobuf:"varint,1,opt,name=pendingAt,proto3" json:"pendingAt,omitempty"`
	FinishedAt           int64    `protobuf:"varint,2,opt,name=finishedAt,proto3" json:"finishedAt,omitempty"`
	ConfirmedAt          int64    `protobuf:"varint,3,opt,name=confirmedAt,proto3" json:"confirmedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusTime) Reset()         { *m = StatusTime{} }
func (m *StatusTime) String() string { return proto.CompactTextString(m) }
func (*StatusTime) ProtoMessage()    {}
func (*StatusTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{6}
}

func (m *StatusTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusTime.Unmarshal(m, b)
}
func (m *StatusTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusTime.Marshal(b, m, deterministic)
}
func (m *StatusTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusTime.Merge(m, src)
}
func (m *StatusTime) XXX_Size() int {
	return xxx_messageInfo_StatusTime.Size(m)
}
func (m *StatusTime) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusTime.DiscardUnknown(m)
}

var xxx_messageInfo_StatusTime proto.InternalMessageInfo

func (m *StatusTime) GetPendingAt() int64 {
	if m != nil {
		return m.PendingAt
	}
	return 0
}

func (m *StatusTime) GetFinishedAt() int64 {
	if m != nil {
		return m.FinishedAt
	}
	return 0
}

func (m *StatusTime) GetConfirmedAt() int64 {
	if m != nil {
		return m.ConfirmedAt
	}
	return 0
}

func init() {
	proto.RegisterType((*DBReply)(nil), "database.types.DBReply")
	proto.RegisterType((*DBReplies)(nil), "database.types.DBReplies")
	proto.RegisterType((*DBRequest)(nil), "database.types.DBRequest")
	proto.RegisterType((*DBRequests)(nil), "database.types.DBRequests")
	proto.RegisterType((*Record)(nil), "database.types.Record")
	proto.RegisterType((*TokenDetail)(nil), "database.types.TokenDetail")
	proto.RegisterType((*StatusTime)(nil), "database.types.StatusTime")
}

func init() { proto.RegisterFile("record.proto", fileDescriptor_bf94fd919e302a1d) }

var fileDescriptor_bf94fd919e302a1d = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x5d, 0x6f, 0x68, 0x5a, 0x4f, 0x57, 0x1c, 0x7c, 0x58, 0xb2, 0x01, 0xa1, 0xc8, 0x5c, 0x7a,
	0x40, 0x15, 0x5a, 0x84, 0x10, 0x48, 0x1c, 0xba, 0x14, 0x71, 0x37, 0x15, 0x07, 0x6e, 0xde, 0x66,
	0x4a, 0x2d, 0xd2, 0x38, 0xd8, 0xae, 0xb4, 0xfd, 0x01, 0xbe, 0x80, 0x1f, 0xe0, 0x4f, 0x91, 0xed,
	0x34, 0xcd, 0x56, 0x5b, 0xb8, 0x79, 0xde, 0xbc, 0x99, 0xf7, 0x66, 0x34, 0x86, 0x0b, 0x83, 0x4b,
	0x6d, 0xca, 0x69, 0x63, 0xb4, 0xd3, 0xec, 0x71, 0x29, 0x9d, 0xbc, 0x95, 0x16, 0xa7, 0x6e, 0xd7,
	0xa0, 0xe5, 0x6f, 0x61, 0x38, 0xbf, 0x11, 0xd8, 0x54, 0x3b, 0xf6, 0x12, 0x06, 0xc6, 0x3f, 0x32,
	0x52, 0x90, 0xc9, 0xf8, 0xfa, 0x72, 0x7a, 0x9f, 0x3a, 0x15, 0xa1, 0x8f, 0x88, 0x24, 0xfe, 0x01,
	0x68, 0x2c, 0x54, 0x68, 0xd9, 0x2b, 0x18, 0x9a, 0xf8, 0xcc, 0x48, 0x91, 0xfc, 0xa3, 0x78, 0x4f,
	0xe3, 0x2f, 0x62, 0xf9, 0xcf, 0x2d, 0x5a, 0xc7, 0x2e, 0x21, 0x75, 0x77, 0x6b, 0x69, 0xd7, 0x41,
	0x9a, 0x8a, 0x36, 0xe2, 0x13, 0x80, 0x8e, 0x64, 0x59, 0x0e, 0xa3, 0x88, 0xb7, 0x2a, 0x54, 0x74,
	0x31, 0xff, 0x75, 0x0e, 0x69, 0x94, 0x38, 0xd5, 0x8c, 0xbd, 0x03, 0xba, 0x32, 0x7a, 0xb3, 0xd0,
	0x3f, 0xb0, 0xce, 0xce, 0xc3, 0x88, 0x4f, 0x8f, 0x5d, 0x86, 0xe4, 0x1c, 0x9d, 0x54, 0x95, 0x38,
	0xb0, 0xd9, 0x1b, 0x18, 0x3a, 0x1d, 0x0b, 0x93, 0xff, 0x17, 0xee, 0xb9, 0xde, 0x09, 0xde, 0x19,
	0xe9, 0x30, 0x7b, 0x54, 0x90, 0x09, 0x11, 0x6d, 0xc4, 0x9e, 0x03, 0x58, 0x27, 0xdd, 0xd6, 0x7e,
	0xd4, 0x25, 0x66, 0x83, 0x82, 0x4c, 0x06, 0xa2, 0x87, 0xb0, 0xf7, 0xfb, 0xfc, 0x42, 0x6d, 0x30,
	0x4b, 0x83, 0x62, 0x7e, 0xac, 0xf8, 0xa5, 0x63, 0x88, 0x1e, 0x9b, 0xff, 0x21, 0x30, 0xee, 0x99,
	0x39, 0xb9, 0x8d, 0x67, 0x40, 0x9d, 0xa7, 0x2d, 0x76, 0x0d, 0x86, 0x6d, 0x50, 0x71, 0x00, 0x58,
	0x06, 0x43, 0x59, 0x96, 0x06, 0xad, 0x0d, 0x03, 0x53, 0xb1, 0x0f, 0xbd, 0xf7, 0x40, 0xfb, 0x2a,
	0xab, 0x6d, 0x9c, 0x8b, 0x8a, 0x1e, 0xc2, 0x38, 0x5c, 0xb8, 0x28, 0xbf, 0x54, 0x1b, 0x59, 0xb5,
	0xd3, 0xdd, 0xc3, 0x78, 0x05, 0x70, 0x70, 0xef, 0x9d, 0x34, 0x58, 0x97, 0xaa, 0xfe, 0x3e, 0x73,
	0xc1, 0x64, 0x22, 0x0e, 0x80, 0xd7, 0x5b, 0xa9, 0x5a, 0xd9, 0x35, 0x96, 0x33, 0x17, 0x8c, 0x26,
	0xa2, 0x87, 0xb0, 0x02, 0xc6, 0x4b, 0x5d, 0xaf, 0x94, 0xd9, 0x04, 0x42, 0x12, 0x08, 0x7d, 0xe8,
	0xfa, 0x37, 0x81, 0xd1, 0xbc, 0xdd, 0x1d, 0x9b, 0x01, 0xfd, 0x8c, 0xae, 0xbd, 0x94, 0xab, 0xe3,
	0x9d, 0x76, 0xc7, 0x96, 0x3f, 0x79, 0x28, 0xe5, 0xcf, 0xfe, 0x8c, 0x7d, 0x02, 0xe8, 0x5a, 0x58,
	0x96, 0x9f, 0xec, 0x61, 0xf3, 0xab, 0x87, 0x9b, 0xf8, 0xf3, 0x3f, 0xbb, 0x19, 0x7d, 0x4b, 0xe3,
	0xc7, 0xbc, 0x4d, 0xc3, 0xcf, 0x7c, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x41, 0xd9, 0x21, 0x86,
	0xa9, 0x03, 0x00, 0x00,
}
